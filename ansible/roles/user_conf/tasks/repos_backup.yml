---
- name: Check that backup config file exists
  stat:
    path: "~/git/s3-backuper/config.json"
  register: config_file
  become: true
  become_user: "{{ final_user }}"

- name: Create git directory
  ansible.builtin.file:
    path: ~/git
    state: directory
    mode: "0755"
  become: true
  become_user: "{{ final_user }}"

- name: Git clone
  ansible.builtin.git:
    repo: "git@github.com:{{ item }}.git"
    dest: "~/git/{{ item.split('/')[1] }}"
  become: true
  when: not config_file.stat.exists
  become_user: "{{ final_user }}"
  with_items: "{{ git_repos }}"

- name: Backing up config file
  copy:
    src: "~/git/s3-backuper/config.json"
    dest: "~/git/s3-backuper/config.json.bak"
    remote_src: yes
  when: config_file.stat.exists
  become: true
  become_user: "{{ final_user }}"

- name: Copy backup config file
  template:
    src: "templates/backup_conf.json.j2"
    dest: "~/git/s3-backuper/config.json"
    owner: "{{ final_user }}"
    group: "{{ final_user }}"
    mode: 0644
  when: config_file.stat.exists
  become: true
  become_user: "{{ final_user }}"

- name: Create backup job at 3:00 everyday
  ansible.builtin.cron:
    name: "Backup docker volumes"
    minute: "0"
    hour: "3"
    job: 'cd /home/{{ final_user }}/git/s3-backuper && ./backup.sh config.json && curl {{ntfy_url}} -u {{ntfy_auth}} -H "Title: {{ntfy_title}}" -d "{{backup_success.ntfy_content}}" -H "Tags: {{backup_success.ntfy_icon}}" || curl {{ntfy_url}} -u {{ntfy_auth}} -H "Title: {{ntfy_title}}" -d "{{backup_error.ntfy_content}}" -H "Tags: {{backup_error.ntfy_icon}}"'
  become: true
  become_user: "{{ final_user }}"

- name: Copy restore script
  template:
    src: "templates/download_last_portainer_backup.sh.j2"
    dest: "~/download_last_portainer_backup.sh"
    owner: "root"
    group: "root"
    mode: 0744
